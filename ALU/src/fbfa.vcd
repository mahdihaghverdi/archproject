$date
  Mon May  8 20:49:39 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module fourbitfulladdertb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # sum[3:0] $end
$var reg 1 $ carry $end
$scope module uut $end
$var reg 4 % input_a[3:0] $end
$var reg 4 & input_b[3:0] $end
$var reg 4 ' sum[3:0] $end
$var reg 1 ( carry $end
$var reg 1 ) carry_0_1 $end
$var reg 1 * carry_1_2 $end
$var reg 1 + carry_2_3 $end
$scope module full_adder_0 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . ci $end
$var reg 1 / s $end
$var reg 1 0 c $end
$var reg 1 1 asb $end
$var reg 1 2 aab $end
$var reg 1 3 asbco $end
$scope module half_adder_0 $end
$var reg 1 4 a $end
$var reg 1 5 b $end
$var reg 1 6 sum $end
$var reg 1 7 carry $end
$upscope $end
$scope module half_adder_1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : sum $end
$var reg 1 ; carry $end
$upscope $end
$upscope $end
$scope module full_adder_1 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > ci $end
$var reg 1 ? s $end
$var reg 1 @ c $end
$var reg 1 A asb $end
$var reg 1 B aab $end
$var reg 1 C asbco $end
$scope module half_adder_0 $end
$var reg 1 D a $end
$var reg 1 E b $end
$var reg 1 F sum $end
$var reg 1 G carry $end
$upscope $end
$scope module half_adder_1 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J sum $end
$var reg 1 K carry $end
$upscope $end
$upscope $end
$scope module full_adder_2 $end
$var reg 1 L a $end
$var reg 1 M b $end
$var reg 1 N ci $end
$var reg 1 O s $end
$var reg 1 P c $end
$var reg 1 Q asb $end
$var reg 1 R aab $end
$var reg 1 S asbco $end
$scope module half_adder_0 $end
$var reg 1 T a $end
$var reg 1 U b $end
$var reg 1 V sum $end
$var reg 1 W carry $end
$upscope $end
$scope module half_adder_1 $end
$var reg 1 X a $end
$var reg 1 Y b $end
$var reg 1 Z sum $end
$var reg 1 [ carry $end
$upscope $end
$upscope $end
$scope module full_adder_3 $end
$var reg 1 \ a $end
$var reg 1 ] b $end
$var reg 1 ^ ci $end
$var reg 1 _ s $end
$var reg 1 ` c $end
$var reg 1 a asb $end
$var reg 1 b aab $end
$var reg 1 c asbco $end
$scope module half_adder_0 $end
$var reg 1 d a $end
$var reg 1 e b $end
$var reg 1 f sum $end
$var reg 1 g carry $end
$upscope $end
$scope module half_adder_1 $end
$var reg 1 h a $end
$var reg 1 i b $end
$var reg 1 j sum $end
$var reg 1 k carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
b0000 #
0$
b0000 %
b0000 &
b0000 '
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
#20000000
b0100 !
b0100 "
b1000 #
b0100 %
b0100 &
b1000 '
1+
1L
1M
1P
1R
1T
1U
1W
1^
1_
1i
1j
#40000000
b1111 !
b1100 "
b1011 #
1$
b1111 %
b1100 &
b1011 '
1(
1,
1/
11
14
16
18
1:
1<
1?
1A
1D
1F
1H
1J
1\
1]
1`
1b
1d
1e
1g
#60000000
